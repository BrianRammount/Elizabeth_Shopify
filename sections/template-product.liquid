{% comment %} CDN for Swiper coursel {% endcomment %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
{% assign selected_variant = product.selected_or_first_available_variant %}
<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::next {
    font-size: 20px;
  }
  .swiper-pagination {
    color: black;
    bottom: 0 !important;
  }
  .swiper-pagination-bullet-active {
    background: black !important;
  }
  .product--information {
    height: fit-content;
  }
</style>
{% comment %} Container {% endcomment %}
<div class="max-w-6xl mx-auto my-8">
  {% comment %} Grid container {% endcomment %}
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    {% comment %} Product Images {% endcomment %}
    <div class="product--medias">
      {% comment %} Renders on medium screen {% endcomment %}
      <div class="hidden md:block">
        {% comment %} Loops through media for product {% endcomment %}
        {% for media in product.media %}
          <div class="h-100 overflow-hidden p-2">
            {% render 'product-media'
              , media: media %}
          </div>
        {% endfor %}
      </div>

      {% comment %} Renders in Small/Mobile screen {% endcomment %}
      <div class="md:hidden">
        {% comment %} Coursel wrapper {% endcomment %}
        <div class="swiper h-94">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-80 overflow-hidden p-2">
                  {% render 'product-media'
                    , media: media %}
                </div>
              </div>
            {% endfor %}
          </div>
          {% comment %} pagination {% endcomment %}
          <div class="swiper-pagination"></div>
          {% comment %} Previous Buttons {% endcomment %}
          <div class="swiper-button-prev"></div>
          {% comment %} Next Button {% endcomment %}
          <div class="swiper-button-next"></div>
        </div>

      </div>
    </div>
    {% comment %} Product container {% endcomment %}
    <div class="product--information sticky top-5 p-2">
      {% comment %} Product form {% endcomment %}
      {% form 'product'
        , product
        , id: 'product-form'
        , novalidate: 'novalidate' %}
        {% comment %} Hidden id for product variant {% endcomment %}
        <input
          type="hidden"
          name="id"
          value="{{ selected_variant.id }}">
        {% comment %} Shopify block option {% endcomment %}
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}

              {% comment %} Vendor Name  {% endcomment %}
              <div class="my-3">
                <span class="text-sm text-gray-500">
                  {{ product.vendor }}
                </span>
              </div>
            {% when 'title' %}
              {% comment %} Product title  {% endcomment %}
              <div class="my-3">
                <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
              </div>
            {% when 'price' %}
              {% comment %} Item Price {% endcomment %}
              <div class="my-3" id="price-{{ section.id }}">
                <span class="text-base text-gray-500 line-through">{{ selected_variant.compare_at_price | money }}</span>
                <span class="text-lg text-gray-900">{{ selected_variant.price | money }}</span>
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                {% endif %}
              </div>
            {% when 'variant_selector' %}
              {% comment %} Product variant selector {% endcomment %}
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                      <div class="my-2">
                        <select
                          name="options[{{ option.name |  escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border py-3 px-3">
                          {% for value in option.values %}
                            <option
                              value="{{ value | escape }}"
                              {% if option.selected_value == value %}
                              selected="selected"
                              {% endif %}>
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>
            {% when 'quantity' %}
              {% comment %} Quantity Selctor {% endcomment %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    type="numner"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    value="1"
                    min="1"
                    class="w-full border px-3 py-3">
                </div>
              </div>
            {% when 'description' %}
              {% comment %} Product Description {% endcomment %}
              <div class="my-3">
                <p class="text-gray-700">{{ product.description }}</p>
              </div>
            {% when 'checkout_buttons' %}
              {% comment %} Add to cart button {% endcomment %}
              <div class="my-3">
                <button
                  type="submit"
                  name="add"
                  class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-500 rounded-sm my-2"
                  {% if seclected_variant.available == false %}
                  disabled
                  {% endif %}>
                  {% if seclected_variant.available == false %}
                    Sold out
                  {% else %}
                    Add to cart
                  {% endif %}
                </button>
              </div>
          {% else %}

            {% endcase %}
          {% endfor %}


        {% endform %}
      </div>

    </div>
  </div>
  {% comment %} Javascript for variant prince and id update {% endcomment %}
  <script>
    class VariantSelector extends HTMLElement {
      constructor (){
        super();
        this.addEventListener("change", this.onVariantChange)
      }
    
      onVariantChange (){
        this.getSelectedOptions();
        this.getSelectedVariant();
        if (this.currentVariant){
          this.updateURL();
          this.updateFormId();
          this.updatePrice();
        }
      }
      getSelectedOptions(){
        this.options = Array.from(this.querySelectorAll('select'), (select)=> select.value);
        console.log(this.options)
      }
      getVariantJson(){
        this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent)
        return this.variantData;
      }
      getSelectedVariant(){
        this.currentVariant = this.getVariantJson().find(
          (variant) => {
            const findings = !variant.options.map(
              (option, index) => {
                return this.options[index] === option;
               } 
            ).includes(false);
            if(findings) return variant
          }
        );
        console.log(this.currentVariant);
      }
      updateURL(){
        if(!this.currentVariant) return;
        window.history.replaceState({},'',`${this.dataset.url}?variant=${this.currentVariant.id}`)
      }
      updateFormId(){
        const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
        form_input.value = this.currentVariant.id;
      }
      updatePrice(){
        fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`).then((response) => response.text()).then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');
          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);
    
          if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        } )
      }
    }
      customElements.define("variant-selector", VariantSelector)
  </script>
  {% comment %} Initial swiper JS {% endcomment %}
  <script>
       const swiper = new Swiper('.swiper', {
      // Optional parameters
      direction: 'horizontal',
      loop: true,
    
      // If we need pagination
      pagination: {
    el: '.swiper-pagination',
      },
    
      // Navigation arrows
      navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev'
      },
    
      });
  </script>

  {% schema %}
    {
      "name": "Product",
      "blocks": [
        {
          "type": "vendor",
          "name": "Vendor",
          "limit": 1
        },
        {
          "type": "title",
          "name": "Title",
          "limit": 1
        },
        {
          "type": "price",
          "name": "Price",
          "limit": 1
        },
        {
          "type": "variant_selector",
          "name": "Variant Selector",
          "limit": 1
        }, {
          "type": "quantity",
          "name": "Quantity",
          "limit": 1
        }, {
          "type": "description",
          "name": "Description",
          "limit": 1
        }, {
          "type": "checkout_buttons",
          "name": "Checkout Buttons",
          "limit": 1
        }
      ],
      "settings": []
    }
  {% endschema %}